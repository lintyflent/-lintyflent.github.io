{"version":3,"sources":["components/error-view/error-view.js","containers/error-container/error-container.js","utils/context.js","components/header-view/header-view.js","components/load-view/load-view.js","components/random-item-view/random-item-view.js","containers/random-item-container/random-item-container.js","utils/random-integer.js","components/record-view/record-view.js","utils/randoms.js","components/item-list-view/item-list-view.js","containers/item-list-container/item-list-container.js","components/item-detalis-view/item-detalis-view.js","containers/item-detalis-container/item-detalis-container.js","utils/item-pages.js","components/not-found-view/not-found-view.js","components/app-view/app-view.js","index.js","services/service.js"],"names":["ErrorView","className","RegisterError","state","error","this","setState","props","children","Component","Context","React","createContext","Provider","Consumer","HeaderView","pages","useContext","to","Menu","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","LoadView","require","RandomItemView","item","name","sourceImg","record","namesHeader","GetNewUrlImg","src","alt","onError","RandomItemContainer","interval","maxItem","sourceData","useState","SetItem","loading","status","SetStatus","onLoadedItem","updateItem","min","max","rand","Math","random","round","randomInteger","then","catch","useEffect","setInterval","clearInterval","Children","map","child","cloneElement","RecordView","field","label","reduction","SetRecord","RandomPerson","GetPerson","GetImgPersonUrl2","RandomPlanet","GetPlanet","GetImgPlanetUrl2","RandomStarship","GetStarship","GetImgStarshipUrl2","withRouter","itemList","history","currentPage","contentList","onClick","push","ItemListContainer","onGetAlldata","onLoadItemDetalis","SetItemList","ItemDetalisView","img","content","onGetData","getImgUrl","match","params","dataItem","updateDataItem","useCallback","undefined","PeoplesPage","selectedItem","SetSelectedItem","GetAllPeople","GetImgPersonUrl","Fragment","itemId","PlanetsPage","GetImgPlanetUrl","GetAllPlanets","StarshipsPage","GetImgStarshipUrl","GetAllStarships","NotFoundView","AppView","path","render","exact","service","_apiUrl","_imgUrl","_getId","url","getResource","a","fetch","req","ok","Error","saltLength","json","res","results","_transformPerson","person","gender","birthYear","birth_year","eyeColor","eye_color","mass","height","_transformPlanet","planet","population","rotationPeriod","rotation_period","diameter","climate","terrain","surfaceWater","surface_water","_transformStarship","model","starshipClass","starship_class","costInCredits","cost_in_credits","length","passengers","crew","MGLT","document","querySelector","ReactDOM","value","getElementById"],"mappings":"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","file":"static/js/main.95672e96.chunk.js","sourcesContent":["import React from \"react\";\nimport './error-view.sass'\n\nexport const ErrorView = () =>\n{\n    return (\n        <div className=\"error\">\n            <h2>Oops!<br/></h2>\n            <span>Something clearly went wrong..<br/></span>\n            <span>Everything will work soon, don't worry :) <br/></span>\n        </div>\n    );\n}","import React, { Component } from \"react\";\nimport {ErrorView} from \"../../components/error-view/error-view\";\n\nexport class RegisterError extends Component\n{\n    state = { error: false }\n    componentDidCatch() { this.setState({ error: true } )}\n\n    render()\n    {\n        if (this.state.error)\n        {\n            return <ErrorView/>\n        }\n        else\n        {\n            return this.props.children;\n        }\n    }\n}","import React from \"react\";\n\nexport const Context = React.createContext();\nexport const Provider = Context.Provider;\nexport const Consumer = Context.Consumer;","import { Link } from \"react-router-dom\";\nimport React, { useContext } from \"react\";\nimport { Context } from \"../../utils/context\"\nimport \"./header-view.sass\"\n\nexport const HeaderView = () =>\n{\n    const { pages } = useContext( Context );\n    return(\n        <header className={\"header\"}>\n            <Link to={\"/\"} className={\"header-link\"}>star DB</Link>\n            <nav>\n                <ul className={\"header-ul\"}>\n                    <li><Link to={ \"/\"+pages[0]+\"/\" }>{ pages[0] }</Link></li>\n                    <li><Link to={ \"/\"+pages[1]+\"/\" }>{ pages[1] }</Link></li>\n                    <li><Link to={ \"/\"+pages[2]+\"/\" }>{ pages[2] }</Link></li>\n                </ul>\n            </nav>\n            <Menu/>\n        </header>\n    )\n}\n\nconst Menu = () =>\n{\n    const { pages } = useContext( Context );\n    return (\n        <div className=\"dropdown header-menu\">\n            <button className=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\"\n                    data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Menu\n            </button>\n            <div className=\"dropdown-menu header-menu-list\" aria-labelledby=\"dropdownMenuButton\">\n                <Link className=\"dropdown-item\" to={ \"/\"+pages[0]+\"/\" }>{ pages[0] }</Link>\n                <Link className=\"dropdown-item\" to={ \"/\"+pages[1]+\"/\" }>{ pages[1] }</Link>\n                <Link className=\"dropdown-item\" to={ \"/\"+pages[2]+\"/\" }>{ pages[2] }</Link>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport \"./load-view.sass\"\n\nexport const LoadView = () =>\n{\n    return (\n        <div className=\"loadingio-spinner-eclipse-j6bz9624dx\">\n            <div className=\"ldio-0qmq0nafzgsp\">\n                <div></div>\n            </div>\n        </div>\n        /* generated by https://loading.io/ */\n    );\n}","import React from \"react\";\nimport \"./random-item-view.sass\"\nimport { Context } from \"../../utils/context\"\nconst { useContext } = require( \"react\" );\n\nexport const RandomItemView  = ({ item: { id, name }, sourceImg, record, namesHeader }) =>\n{\n    const { GetNewUrlImg } = useContext( Context );\n    return (\n        <section className=\"alert alert-dark random-item\">\n            <h1 className=\"random-item-header\">Random { namesHeader }</h1>\n            <img className=\"rounded random-item-img\"\n                 src={ sourceImg( id )}\n                 alt={ name }\n                 onError={() => GetNewUrlImg( \".random-item-img\" )}\n            />\n            <h2 className=\"random-item-name\">{ name }</h2>\n            <ul className=\"random-item-ul list-group\">\n                { record }\n            </ul>\n        </section>\n    );\n}","import { LoadView } from \"../../components/load-view/load-view\";\nimport React, { useEffect, useState } from \"react\";\nimport { RandomItemView } from \"../../components/random-item-view/random-item-view\";\nimport { randomInteger } from \"../../utils/random-integer\";\n\nexport const RandomItemContainer = ({ maxItem, sourceData, sourceImg, namesHeader, children }) =>\n{\n    const [ item, SetItem ] = useState({});\n    const [ status, SetStatus ] = useState({ loading: true, error: false });\n\n    const onLoadedItem = ( item ) =>\n    {\n        SetItem( item );\n        SetStatus({ ...status, loading: false })\n    };\n\n    const updateItem = () =>\n    {\n        let id = randomInteger( 1, maxItem );\n        if ( id !== null )\n        {\n            sourceData( id )\n                .then( onLoadedItem )\n                .catch(( error ) =>\n                {\n                    updateItem( maxItem );\n                });\n        }\n    }\n\n    let interval;\n    useEffect(()=>\n    {\n        updateItem( maxItem );\n        interval = setInterval(() => updateItem( maxItem ), 60000 );\n        return () => clearInterval( interval );\n    }, [])\n\n    const { loading } = status;\n\n    if( loading )\n    {\n        return (\n            <ul className=\"list-group item-list\">\n                <LoadView/>\n            </ul>\n        )\n    }\n    else\n    {\n        return (\n            <RandomItemView item={ item }\n                      sourceImg={ sourceImg }\n                      record={ React.Children.map( children, ( child ) =>\n                      {\n                          return React.cloneElement( child, { item });\n                      })}\n                      namesHeader={ namesHeader }\n            />\n        );\n    }\n}","export const randomInteger = (min, max) =>\n{\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n}","import React from \"react\";\nimport './record-view.sass'\n\nexport const RecordView = ({ item, field, label, reduction = \"\" }) =>\n{\n    return (\n        <li className=\"list-group-item item-detalis-li\">{ label } { item[ field ]} { reduction }</li>\n    )\n}\n\nexport const SetRecord = ( field, label, reduction = \"\" ) =>\n{\n    return <RecordView field={ field } label={ label + \":\" } reduction={ reduction }/>;\n}\n\n","import {RandomItemContainer} from \"../containers/random-item-container/random-item-container\";\nimport React, {useContext} from \"react\";\nimport { Context } from \"../utils/context\"\nimport {SetRecord} from \"../components/record-view/record-view\";\n\nexport const RandomPerson = () =>\n{\n    const {GetPerson, GetImgPersonUrl2, namesHeader} = useContext(Context);\n    return <RandomItemContainer sourceImg={GetImgPersonUrl2}\n                       sourceData={GetPerson}\n                       maxItem={80}\n                       namesHeader={namesHeader[0]}\n    >\n        {SetRecord(\"eyeColor\", \"Eye color\")}\n        {SetRecord(\"birthYear\", \"Birth year\")}\n        {SetRecord(\"gender\", \"Gender\")}\n        {SetRecord(\"mass\", \"Mass\", \"kg\")}\n        {SetRecord(\"height\", \"Height\", \"sm\")}\n    </RandomItemContainer>\n}\nexport const RandomPlanet = () =>\n{\n    const {GetPlanet, GetImgPlanetUrl2, namesHeader} = useContext(Context);\n    return <RandomItemContainer sourceImg={GetImgPlanetUrl2}\n                       sourceData={GetPlanet}\n                       maxItem={60}\n                       namesHeader={namesHeader[1]}\n    >\n        {SetRecord(\"population\", \"Population\", \"\")}\n        {SetRecord(\"surfaceWater\", \"surface water\", \"%\")}\n        {SetRecord(\"terrain\", \"Terrain\")}\n        {SetRecord(\"rotationPeriod\", \"Rotation period\", \"day\")}\n        {SetRecord(\"diameter\", \"Diameter\", \"km\")}\n    </RandomItemContainer>\n}\nexport const RandomStarship = () =>\n{\n    const {GetStarship, GetImgStarshipUrl2, namesHeader} = useContext(Context);\n    return <RandomItemContainer sourceImg={GetImgStarshipUrl2}\n                       sourceData={GetStarship}\n                       maxItem={15}\n                       namesHeader={namesHeader[2]}\n    >\n        {SetRecord(\"starshipClass\", \"Class\")}\n        {SetRecord(\"length\", \"Length\", \"m\")}\n        {SetRecord(\"maxAtmospheringSpeed\", \"Max speed\", \"\")}\n        {SetRecord(\"crew\", \"Crew\")}\n        {SetRecord(\"passengers\", \"passengers\")}\n    </RandomItemContainer>\n}","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport \"./item-list-view.sass\"\n\nconst ItemListView = ({ itemList, history, currentPage }) =>\n{\n    const contentList = itemList.map(( item ) =>\n    {\n        return (\n            <li key={ item.name }\n                className={\"list-group-item item-list-view\"}\n                onClick={ () => { history.push( `/${currentPage }/${ item.id }`)}}\n            >{ item.name }</li>\n        );\n    });\n\n    return (\n        <ul className=\"list-group item-list\">\n            { contentList }\n        </ul>\n    );\n}\nexport default withRouter( ItemListView );","import { LoadView } from \"../../components/load-view/load-view\";\nimport React, { useEffect, useState } from \"react\";\nimport ItemListView from \"../../components/item-list-view/item-list-view\";\n\nexport const ItemListContainer = ({ onGetAlldata, onLoadItemDetalis, currentPage }) =>\n{\n    const [ itemList, SetItemList ] = useState( null );\n    const [ status, SetStatus ] = useState({ loading: true, error: false });\n    useEffect(()=>\n    {\n        onGetAlldata()\n            .then(( itemList ) =>\n            {\n                SetItemList( itemList );\n                SetStatus({ ...status ,loading: false });\n            })\n            .catch(( error ) => SetStatus({ loading: false, error: true }))\n    }, []);\n\n    const { loading } = status;\n\n    if(loading)\n    {\n        return (\n            <ul className=\"list-group item-list\">\n                <LoadView/>\n            </ul>\n        )\n    }\n    else\n    {\n        return (\n            <ItemListView itemList={ itemList }\n                          onLoadItemDetalis={( id ) => { onLoadItemDetalis( id ) }}\n                          currentPage={ currentPage }\n            />\n        );\n    }\n}\n","import React, { useContext } from \"react\";\nimport { Context } from \"../../utils/context\"\nimport \"./item-detalis-view.sass\"\n\nexport const ItemDetalisView = ({ item, img, record, namesHeader }) => {\n    const { name } = item;\n    const { GetNewUrlImg } = useContext( Context );\n\n    return (\n        <section className=\"item-detalis alert alert-dark\">\n            <h2 className=\"item-detalis-header\">Selected { namesHeader }</h2>\n            <img className=\"rounded item-detalis-img\"\n                 src={ img }\n                 alt={ name }\n                 onError={ () => GetNewUrlImg( \".item-detalis-img\" ) }\n            />\n            <h3 className={ \"item-detalis-name\" }>{ name }</h3>\n            <ul className={ \"list-group item-detalis-ul\" }>\n                { record }\n            </ul>\n        </section>\n    );\n}","import React, { useCallback, useEffect, useState } from \"react\";\nimport { LoadView } from \"../../components/load-view/load-view\";\nimport { ItemDetalisView } from \"../../components/item-detalis-view/item-detalis-view\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ItemDetalisContainer = ({ onGetData, getImgUrl, children, match, namesHeader }) =>\n{\n    const { id } = match.params;\n    const [ dataItem, SetItem ] = useState({ item: null, img: null });\n    const [ status, SetStatus ] = useState({ loading: true, error: false });\n\n    const updateDataItem = useCallback(() =>\n    {\n        if ( id !== null && id !== undefined )\n        {\n            SetStatus(() => { return { ...status, loading: true, error: true }; });\n            onGetData( id )\n                .then(( item )=>\n                {\n                    SetItem(() => { return { item: item, img: getImgUrl(item )}; })\n                    SetStatus(() => { return { ...status, loading: false }; })\n                })\n        }\n    }, [ getImgUrl, id, onGetData ])\n    useEffect(()=>{ updateDataItem() }, [ id, updateDataItem ]);\n\n    let content;\n    const { item } = dataItem;\n    if( status.loading )\n    {\n        if( item === null || item === undefined )\n        {\n            content = <div>Character selection pending ...</div>\n        }\n        else\n        {\n            content = <LoadView/>\n        }\n    }\n    else\n    {\n        return (\n            <ItemDetalisView  item={ item }\n                              img={ dataItem.img }\n                              record={ React.Children.map( children, ( child ) =>\n                              {\n                                  return React.cloneElement( child, { item });\n                              })}\n                              namesHeader={ namesHeader }\n            />\n        );\n    }\n    return (\n        <section className=\"item-detalis alert alert-dark\">\n            { content }\n        </section>\n    )\n}\n\nexport default withRouter(ItemDetalisContainer);","import {SetRecord} from \"../components/record-view/record-view\";\nimport React, {useContext, useState} from \"react\";\nimport { Context } from \"../utils/context\"\nimport {ItemListContainer} from \"../containers/item-list-container/item-list-container\";\nimport ItemDetalisContainer from \"../containers/item-detalis-container/item-detalis-container\";\n\nexport const PeoplesPage = () =>\n{\n    const [selectedItem, SetSelectedItem] = useState(null);\n    const {GetAllPeople, GetPerson, GetImgPersonUrl, pages, namesHeader} = useContext(Context);\n    return (\n        <React.Fragment>\n            <ItemListContainer onLoadItemDetalis={(id) => {SetSelectedItem(id)}}\n                               onGetAlldata={GetAllPeople}\n                               currentPage={pages[0]}\n            />\n            <ItemDetalisContainer itemId={selectedItem}\n                             onGetData={GetPerson}\n                             getImgUrl={GetImgPersonUrl}\n                             namesHeader={namesHeader[0]}\n            >\n                {SetRecord(\"eyeColor\", \"Eye color\")}\n                {SetRecord(\"birthYear\", \"Birth year\")}\n                {SetRecord(\"gender\", \"Gender\")}\n                {SetRecord(\"mass\", \"Mass\", \"kg\")}\n                {SetRecord(\"height\", \"Height\", \"sm\")}\n            </ItemDetalisContainer>\n        </React.Fragment>\n    );\n}\nexport const PlanetsPage = () =>\n{\n    const [selectedItem, SetSelectedItem] = useState(null);\n    const {GetImgPlanetUrl, GetPlanet, GetAllPlanets, pages, namesHeader} = useContext(Context);\n    return (\n        <React.Fragment>\n            <ItemListContainer onLoadItemDetalis={(id) => {SetSelectedItem(id)}}\n                               onGetAlldata={GetAllPlanets}\n                               currentPage={pages[1]}\n            />\n            <ItemDetalisContainer itemId={selectedItem}\n                                  onGetData={GetPlanet}\n                                  getImgUrl={GetImgPlanetUrl}\n                                  namesHeader={namesHeader[1]}\n            >\n                {SetRecord(\"population\", \"Population\", \"\")}\n                {SetRecord(\"surfaceWater\", \"surface water\", \"%\")}\n                {SetRecord(\"terrain\", \"Terrain\")}\n                {SetRecord(\"rotationPeriod\", \"Rotation period\", \"day\")}\n                {SetRecord(\"diameter\", \"Diameter\", \"km\")}\n            </ItemDetalisContainer>\n        </React.Fragment>\n    );\n}\nexport const StarshipsPage = () =>\n{\n    const [selectedItem, SetSelectedItem] = useState(null);\n    const {GetImgStarshipUrl, GetStarship, GetAllStarships, pages, namesHeader} = useContext(Context);\n    return (\n        <React.Fragment>\n            <ItemListContainer onLoadItemDetalis={(id) => {SetSelectedItem(id)}}\n                               onGetAlldata={GetAllStarships}\n                               currentPage={pages[2]}\n            />\n            <ItemDetalisContainer itemId={selectedItem}\n                                  onGetData={GetStarship}\n                                  getImgUrl={GetImgStarshipUrl}\n                                  namesHeader={namesHeader[2]}\n            >\n                {SetRecord(\"starshipClass\", \"Class\")}\n                {SetRecord(\"length\", \"Length\", \"m\")}\n                {SetRecord(\"MGLT\", \"MGLT\", \"In h\")}\n                {SetRecord(\"crew\", \"Crew\")}\n                {SetRecord(\"passengers\", \"passengers\")}\n            </ItemDetalisContainer>\n        </React.Fragment>\n    );\n}","import React from \"react\";\nimport \"./not-found-view.sass\"\n\nexport const NotFoundView = () =>\n{\n    return (\n        <div className=\"not-found-view\">\n            <h2>Page not found!<br/></h2>\n            <span>Unfortunately, there is no such page :(<br/></span>\n        </div>\n    );\n}","import {HeaderView} from \"../header-view/header-view\";\nimport React, {useContext} from \"react\";\nimport {RandomPerson, RandomPlanet, RandomStarship} from \"../../utils/randoms\";\nimport {PeoplesPage, PlanetsPage, StarshipsPage} from \"../../utils/item-pages\";\nimport { Route, Switch } from \"react-router-dom\";\nimport {NotFoundView} from \"../not-found-view/not-found-view\";\nimport {Context} from \"../../utils/context\";\nimport \"./app-view.sass\"\n\nexport const AppView = () =>\n{\n    const { pages } = useContext( Context );\n\n    return (\n        <div className={\"app\"}>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <div className={\"app-gird\"}>\n                            <HeaderView/>\n                            <Switch>\n                                <Route path={\"/\" + pages[0] + \"/:id?\"}\n                                       render={()=>\n                                           <React.Fragment>\n                                               <RandomPerson/>\n                                               <PeoplesPage/>\n                                           </React.Fragment>}\n                                />\n                                <Route path={\"/\" + pages[1] + \"/:id?\"}\n                                       render={()=>\n                                           <React.Fragment>\n                                               <RandomPlanet/>\n                                               <PlanetsPage/>\n                                           </React.Fragment>}\n                                />\n                                <Route path={\"/\" + pages[2] + \"/:id?\"}\n                                       render={()=>\n                                           <React.Fragment>\n                                               <RandomStarship/>\n                                               <StarshipsPage/>\n                                           </React.Fragment>}\n                                />\n                                <Route path={\"/\"} exact\n                                       render={()=>\n                                           <React.Fragment>\n\n                                           </React.Fragment>}\n                                />\n\n                                <Route render={()=> <NotFoundView/>}/>\n                            </Switch>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { Service } from \"./services/service\"\nimport React from \"react\";\nimport ReactDOM from \"react-dom\"\nimport { RegisterError } from \"./containers/error-container/error-container\";\nimport { Provider as ProviderService } from \"./utils/context\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {AppView} from \"./components/app-view/app-view\";\n\nconst service = new Service();\nReactDOM.render(\n    <RegisterError>\n        <ProviderService value={ service }>\n            <Router>\n                <AppView/>\n            </Router>\n        </ProviderService>\n    </RegisterError>\n    , document.getElementById( \"root\" ));","export class Service\n{\n    pages = [\"people\", \"planets\", \"starships\"];\n    namesHeader = [\"character\", \"planet\", \"starship\"];\n    _apiUrl = `https://swapi.dev/api/`;\n    _imgUrl = 'https://starwars-visualguide.com/assets/img/';\n\n    _getId = (url) =>\n    {\n        return url.match(/\\/([0-9]*)\\/$/)[1];\n    }\n    getResource = async (url) =>\n    {\n        const req = await fetch(`${this._apiUrl}${url}`);\n        if (req.status === 404)\n        {\n\n        }\n\n        if(req.ok === false)\n        {\n            throw new Error(`Could not fetch ${`${this._apiUrl}${url}`} received ${req.saltLength}`);\n        }\n        return await req.json();\n    }\n\n\n    GetAllPeople = async () =>\n    {\n        const res = await this.getResource(this.pages[0] + `/`);\n        return res.results.map(this._transformPerson);\n    }\n    GetPerson = async (id) =>\n    {\n        const item = await this.getResource(this.pages[0] + `/${id}/`);\n        return this._transformPerson(item);\n    }\n    _transformPerson = (person) =>\n    {\n        return {\n            id: this._getId(person.url),\n            name: person.name,\n            gender: person.gender,\n            birthYear: person.birth_year,\n            eyeColor: person.eye_color,\n            mass: person.mass,\n            height: person.height\n        }\n    }\n    GetImgPersonUrl = ({id}) =>\n    {\n        return this._imgUrl+\"characters/\"+id+\".jpg\";\n    }\n    GetImgPersonUrl2 = (id) =>\n    {\n        return this._imgUrl+\"characters/\"+id+\".jpg\";\n    }\n\n    GetAllPlanets = async () =>\n    {\n        const res = await this.getResource(this.pages[1] + `/`);\n        return res.results.map(this._transformPlanet);\n    }\n    GetPlanet = async (id) =>\n    {\n        const item = await this.getResource(this.pages[1] + `/${id}/`);\n        return this._transformPlanet(item);\n    }\n    _transformPlanet = (planet) =>\n    {\n        return {\n            id: this._getId(planet.url),\n            name: planet.name,\n            population: planet.population,\n            rotationPeriod: planet.rotation_period,\n            diameter: planet.diameter,\n            climate: planet.climate,\n            terrain: planet.terrain,\n            surfaceWater: planet.surface_water\n        }\n    }\n    GetImgPlanetUrl = ({id}) =>\n    {\n        return this._imgUrl + this.pages[1] + `/` + id + \".jpg\";\n    }\n    GetImgPlanetUrl2 = (id) =>\n    {\n        return this._imgUrl + this.pages[1] + `/` + id + \".jpg\";\n    }\n\n\n    GetAllStarships = async () =>\n    {\n        const res = await this.getResource( this.pages[2] + `/`);\n        return res.results.map(this._transformStarship);\n    }\n    GetStarship = async (id) =>\n    {\n        const item = await this.getResource(this.pages[2] + `/${id}/`);\n        return this._transformStarship(item);\n    }\n    _transformStarship = (item) =>\n    {\n        return {\n            id: this._getId(item.url),\n            name: item.name,\n            model: item.model,\n            starshipClass: item.starship_class,\n            costInCredits: item.cost_in_credits,\n            length: item.length,\n            passengers: item.passengers,\n            crew: item.crew,\n            MGLT: item.MGLT\n        }\n    }\n    GetImgStarshipUrl = ({id}) =>\n    {\n        return this._imgUrl + this.pages[2] + `/` + id + \".jpg\";\n    }\n    GetImgStarshipUrl2 = (id) =>\n    {\n        return this._imgUrl + this.pages[2] + `/` + id +\".jpg\";\n    }\n\n    GetNewUrlImg = (className) =>\n    {\n        document.querySelector(className).src = \"https://i.ibb.co/dMz5tpx/note404.jpg\";\n    }\n}"],"sourceRoot":""}